// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieManagement.DataAccess.Context;

#nullable disable

namespace MovieManagement.DataAccess.Migrations
{
    [DbContext(typeof(MovieManagementContext))]
    [Migration("20221216073114_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovieManagement.Domain.Entites.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ifeanyi",
                            IsDeleted = false,
                            LastName = "Madu"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Edeh",
                            IsDeleted = false,
                            LastName = "Chinyere"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Akah",
                            IsDeleted = false,
                            LastName = "Emeka"
                        });
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Biography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActorId")
                        .IsUnique();

                    b.ToTable("biographies");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActorId = 1,
                            Description = "The coming of our lord jesus",
                            IsDeleted = false,
                            Name = "The lord is coming "
                        },
                        new
                        {
                            Id = 2,
                            ActorId = 2,
                            Description = "The lord jesus is the lord",
                            IsDeleted = false,
                            Name = "The lord is great "
                        },
                        new
                        {
                            Id = 3,
                            ActorId = 1,
                            Description = "Who is like him",
                            IsDeleted = false,
                            Name = "The lord is good "
                        },
                        new
                        {
                            Id = 4,
                            ActorId = 3,
                            Description = "The giver of life presentaion",
                            IsDeleted = false,
                            Name = "Offering the lord "
                        });
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Biography", b =>
                {
                    b.HasOne("MovieManagement.Domain.Entites.Actor", "Actor")
                        .WithOne("Biography")
                        .HasForeignKey("MovieManagement.Domain.Entites.Biography", "ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Genre", b =>
                {
                    b.HasOne("MovieManagement.Domain.Entites.Movie", null)
                        .WithMany("Genres")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Movie", b =>
                {
                    b.HasOne("MovieManagement.Domain.Entites.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Actor", b =>
                {
                    b.Navigation("Biography");
                });

            modelBuilder.Entity("MovieManagement.Domain.Entites.Movie", b =>
                {
                    b.Navigation("Genres");
                });
#pragma warning restore 612, 618
        }
    }
}
